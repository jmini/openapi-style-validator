plugins {
    id 'java-gradle-plugin'
}

dependencies {
	implementation project(':lib')
	implementation 'io.swagger.parser.v3:swagger-parser:2.0.14'
	implementation 'org.openapitools.empoa:empoa-swagger-core:1.0.0'
    testImplementation 'junit:junit:4.12'
}

gradlePlugin {
    plugins {
        openAPIStyleValidator {
            id = 'org.openapitools.openapistylevalidator'
            implementationClass = 'org.openapitools.openapistylevalidator.gradle.OpenAPIStyleValidatorGradlePlugin'
        }
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar) {
    from javadoc
    classifier = 'javadoc'
}

// Add a source set for the functional test suite
sourceSets {
    functionalTest {
    }
}

gradlePlugin.testSourceSets(sourceSets.functionalTest)
configurations.functionalTestImplementation.extendsFrom(configurations.testImplementation)

// Add a task to run the functional tests
task functionalTest(type: Test) {
    testClassesDirs = sourceSets.functionalTest.output.classesDirs
    classpath = sourceSets.functionalTest.runtimeClasspath
}

check {
    dependsOn(tasks.functionalTest)
}

publishing {
    // afterEvaluate is necessary because java-gradle-plugin
    // creates its publications in an afterEvaluate callback
    afterEvaluate {
        publications {
            withType(MavenPublication) {
                // customize all publications here
                pom {
                    inceptionYear = "2019"
                }
            }
            pluginMaven {
                // customize main publications here
                artifact sourcesJar
                artifact javadocJar
                pom {
                    name = "main artifact"
                }
            }
            openAPIStyleValidatorPluginMarkerMaven {
                // customize marker publications here
                pom {
                    name = "marker artifact"
                }
            }
        }
    }   
}